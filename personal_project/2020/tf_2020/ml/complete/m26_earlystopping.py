from sklearn.feature_selection import SelectFromModel
from sklearn.model_selection import train_test_split as tts
import numpy as np
from xgboost import XGBRegressor
from sklearn.datasets import load_boston
from sklearn.metrics import r2_score

boston = load_boston()


x= boston.data
y= boston.target

x_train, x_test, y_train, y_test = tts(x,y,train_size=0.8,
                                                    random_state=66)

xgb = XGBRegressor(n_estimators=1000,learning_rate = 0.1)

xgb.fit(x_train,y_train,verbose=True, eval_metric="rmse",eval_set=[(x_train,y_train), (x_test, y_test)],early_stopping_rounds=20)
#rmse,mae,logloss,error,auc


y_pre = xgb.predict(x_test)

r2 = r2_score(y_test,y_pre)
score = xgb.score(x_test,y_test)
result = xgb.evals_result()
print(__file__)
print(result)
print("r2")
print(r2)
print("score")
print(score)

'''
d:\Study\ml\m26_earlystopping.py
{'validation_0': {'rmse': [21.584942, 19.552324, 17.718475, 16.061243, 14.573687, 13.229043, 12.019938, 10.924063, 9.939251, 9.050341, 8.250292, 7.528835, 6.877159, 6.285793, 5.75643, 5.276396, 4.840464, 4.452346, 4.098953, 3.783291, 3.494163, 3.229766, 2.997001, 2.785933, 2.596789, 2.427173, 2.271579, 2.13654, 2.008047, 1.894674, 1.791861, 1.698995, 1.619011, 1.548691, 1.477131, 1.413559, 1.360601, 1.309191, 1.258944, 1.222208, 1.188944, 1.15192, 1.11977, 1.089772, 1.066359, 1.033299, 1.007766, 0.986699, 0.966628, 0.947515, 0.922524, 0.906967, 0.894245, 0.877045, 0.862615, 0.844609, 0.832155, 0.819508, 0.805068, 
0.799817, 0.785423, 0.770564, 0.753884, 0.734434, 0.723641, 0.708233, 0.685943, 0.677175, 0.663835, 0.656605, 0.64789, 0.63757, 0.632382, 0.622524, 0.614756, 0.607258, 0.59423, 0.579971, 0.570875, 0.56245, 0.556035, 0.551424, 0.540793, 0.535296, 0.532005, 0.521469, 0.513038, 0.505995, 0.500242, 0.4905, 0.478321, 0.471581, 0.466409, 0.46071, 0.451173, 0.447926, 0.442749, 0.438605]}, 'validation_1': {'rmse': [21.684599, 19.621567, 17.763321, 16.070097, 14.580526, 13.209163, 11.978208, 10.904296, 9.927436, 9.083901, 8.289829, 7.569383, 6.922719, 6.360519, 5.848207, 5.407252, 5.020245, 4.64498, 4.321252, 4.068139, 3.844176, 3.636686, 3.465062, 3.306451, 3.169398, 3.048661, 2.948704, 2.860604, 2.798971, 2.736922, 2.696526, 2.646731, 2.602393, 2.559753, 2.528021, 2.499606, 2.478683, 2.459541, 2.450036, 2.428785, 2.419402, 
2.408272, 2.405094, 2.396596, 2.390805, 2.380923, 2.380136, 2.37666, 2.375915, 2.383959, 2.381479, 2.383624, 2.376911, 2.387203, 2.38304, 2.382698, 2.38723, 2.383196, 2.38753, 2.383221, 2.380334, 2.380821, 2.381596, 2.383046, 2.383843, 2.377451, 2.376071, 2.376894, 2.374982, 2.376707, 2.377899, 2.377539, 2.379139, 2.377664, 2.377683, 2.374882, 2.37559, 2.374621, 2.368993, 2.370521, 2.374039, 2.372504, 2.377633, 2.376714, 2.379108, 2.378957, 2.376793, 2.379288, 2.378531, 2.377135, 2.376787, 2.377653, 2.378157, 2.37618, 2.376493, 2.376806, 2.375786, 2.375668]}}
r2
0.9328556062354909
score
0.9328556062354909
'''